<Page
    x:Class="UWPExample.SwitchPresenterPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:essential="using:UWPPackage"
    xmlns:local="using:UWPExample"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <StackPanel Spacing="10">
        <TextBlock Text="SwitchPresenter can make it easier to follow complex layout changes or layouts with varying logic that are based on a property, for instance the type of ticketing mode for an airline." />
        <StackPanel>
            <ComboBox
                x:Name="Lookup"
                Margin="0,0,0,8"
                Header="Look up reservation"
                SelectedIndex="0">
                <x:String>Select an option</x:String>
                <x:String>Confirmation Code</x:String>
                <x:String>E-ticket number</x:String>
                <x:String>Mileage Plan number</x:String>
            </ComboBox>

            <essential:SwitchPresenter Value="{Binding SelectedItem, ElementName=Lookup}">
                <!--<essential:SwitchPresenter.ContentTemplate>
                    <DataTemplate x:DataType="local:TemplateInformation">
                        <StackPanel>
                            <TextBox
                                x:Name="CodeValidator"
                                Header="{x:Bind Header1}"
                                PlaceholderText="{x:Bind PlaceholderText1}" />
                            <TextBlock Text="Thanks for entering a valid code!" />
                        </StackPanel>
                    </DataTemplate>

                </essential:SwitchPresenter.ContentTemplate>-->

                <essential:Case Value="Confirmation Code">

                    <!--<local:TemplateInformation
                        Header1="Confirmation code"
                        PlaceholderText1="6 letters"
                        Regex1="^[a-zA-Z]{6}$" />-->

                    <StackPanel>
                        <TextBox
                            Name="ConfirmationCodeValidator"
                            Header="Confirmation code"
                            PlaceholderText="6 letters" />
                        <TextBlock Text="Thanks for entering a valid code!" />
                    </StackPanel>

                </essential:Case>
                <essential:Case Value="E-ticket number">
                    <StackPanel>
                        <TextBox
                            Name="TicketValidator"
                            Header="E-ticket number"
                            PlaceholderText="10 or 13 numbers" />
                        <TextBlock Text="Thanks for entering a valid code!" />
                    </StackPanel>
                </essential:Case>
                <essential:Case Value="Mileage Plan number">
                    <TextBox
                        Name="PlanValidator"
                        Header="Mileage Plan #"
                        PlaceholderText="Mileage Plan #" />
                </essential:Case>
                <essential:Case IsDefault="True">
                    <TextBlock Text="Please select a way to lookup your reservation above..." />
                </essential:Case>
            </essential:SwitchPresenter>
        </StackPanel>

        <TextBlock Text="Or it can simply be used to clearly display different outcomes based on some state which can be useful for a NavigationView or with a simple enum as in the following example:" />
        <StackPanel>
            <ComboBox
                x:Name="AnimalPicker"
                Header="Pick an Animal"
                SelectedIndex="0">
                <x:String>Bunny</x:String>
                <x:String>Cat</x:String>
                <x:String>Dog</x:String>
                <x:String>Giraffe</x:String>
                <x:String>Llama</x:String>
                <x:String>Otter</x:String>
                <x:String>Owl</x:String>
                <x:String>Parrot</x:String>
                <x:String>Squirrel</x:String>
            </ComboBox>
            <essential:SwitchPresenter Padding="16" Value="{Binding SelectedItem, ElementName=AnimalPicker}">
                <essential:Case Value="Bunny">
                    <TextBlock FontSize="32" Text="🐇" />
                </essential:Case>
                <essential:Case Value="Cat">
                    <TextBlock FontSize="32" Text="🐈" />
                </essential:Case>
                <essential:Case Value="Dog">
                    <TextBlock FontSize="32" Text="🐕" />
                </essential:Case>
                <essential:Case Value="Giraffe">
                    <TextBlock FontSize="32" Text="🦒" />
                </essential:Case>
                <essential:Case Value="Llama">
                    <TextBlock FontSize="32" Text="🦙" />
                </essential:Case>
                <essential:Case Value="Otter">
                    <TextBlock FontSize="32" Text="🦦" />
                </essential:Case>
                <essential:Case Value="Owl">
                    <TextBlock FontSize="32" Text="🦉" />
                </essential:Case>
                <essential:Case Value="Parrot">
                    <TextBlock FontSize="32" Text="🦜" />
                </essential:Case>
                <essential:Case Value="Squirrel">
                    <TextBlock FontSize="32" Text="🐿" />
                </essential:Case>
            </essential:SwitchPresenter>
        </StackPanel>


        <TextBlock Text="SwitchPresenter can also be used as a replacement for the deprecated Loading control. This provides more fine-grained control over animations and contents within each state." />

        <Grid Padding="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <essential:SwitchPresenter
                Grid.Column="0"
                HorizontalAlignment="Center"
                Value="{Binding IsOn, ElementName=LoadingState, Mode=OneWay}">
                <essential:Case>
                    <essential:Case.Value>
                        <x:Boolean>True</x:Boolean>
                    </essential:Case.Value>
                    <StackPanel HorizontalAlignment="Center">
                        <ProgressRing IsActive="{x:Bind LoadingState.IsOn, Mode=OneWay}" />
                        <TextBlock
                            HorizontalAlignment="Center"
                            Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                            Style="{StaticResource CaptionTextBlockStyle}"
                            Text="Fetching data.." />
                    </StackPanel>
                </essential:Case>
                <essential:Case>
                    <essential:Case.Value>
                        <x:Boolean>False</x:Boolean>
                    </essential:Case.Value>
                    <TextBlock
                        HorizontalAlignment="Center"
                        TextAlignment="Center"
                        TextWrapping="WrapWholeWords">
                        <Run FontWeight="SemiBold" Text="Content has loaded" />
                        <LineBreak />
                        <Run Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua." />
                    </TextBlock>
                </essential:Case>
            </essential:SwitchPresenter>


            <ToggleSwitch
                x:Name="LoadingState"
                Grid.Column="1"
                Header="IsLoading" />
        </Grid>
    </StackPanel>
</Page>
