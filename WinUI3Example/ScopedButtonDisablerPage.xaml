<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="WinUI3Example.ScopedButtonDisablerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:WinUI3Example"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <local:ControlExample HeaderText="ScopedButtonDisabler">
        <StackPanel Spacing="5">
            <Button x:Name="Button" Click="ClickHandler">Click this button fast enough will trigger twice</Button>
            <Button x:Name="ButtonWithScopeDisabler" Click="ButtonWithScopeDisabler_Click">This button will not triggered twice</Button>
        </StackPanel>
        <local:ControlExample.Output>
            <TextBlock>
                <Run Text="File picked: " />
                <Run x:Name="FilePathText" />
            </TextBlock>
        </local:ControlExample.Output>

        <local:ControlExample.Cpp>
            <local:CodeSource>
                <local:CodeSource.Code>
                    <x:String xml:space="preserve">#include &lt;include/ScopedButtonDisabler.hpp&gt;
winrt::Windows::Foundation::IAsyncAction ScopedButtonDisablerPage::ButtonWithScopeDisabler_Click(
    winrt::Windows::Foundation::IInspectable const&amp; sender,
    winrt::Microsoft::UI::Xaml::RoutedEventArgs const&amp;)
{
    ScopedButtonDisabler disabler{ sender };
    //Forces you to pass an hwnd
    WinUIEssentials::Windows::Storage::Pickers::FileOpenPicker picker{ MainWindow::Hwnd };
    picker.FileTypeFilter().Append(L&quot;*&quot;);
    if (auto file = co_await picker.PickSingleFileAsync())
        FilePathText().Text(file.Path());
}</x:String>
                </local:CodeSource.Code>
            </local:CodeSource>
        </local:ControlExample.Cpp>
    </local:ControlExample>
</Page>
