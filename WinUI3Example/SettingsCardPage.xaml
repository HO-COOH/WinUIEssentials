<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="WinUI3Example.SettingsCardPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:essential="using:WinUI3Package"
    xmlns:local="using:WinUI3Example"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <StackPanel>
        <local:ControlExample HeaderText="Default settings card">
            <essential:SettingsCard
                x:Name="settingsCard"
                Description="This is a default card, with the Header, HeaderIcon, Description and Content set."
                Header="This is the Header"
                IsEnabled="{x:Bind IsCardEnabled.IsOn, Mode=OneWay}">
                <essential:SettingsCard.HeaderIcon>
                    <FontIcon Glyph="&#xE799;" />
                </essential:SettingsCard.HeaderIcon>
                <ComboBox SelectedIndex="0">
                    <x:String>Option 1</x:String>
                    <x:String>Option 2</x:String>
                    <x:String>Option 3</x:String>
                </ComboBox>
            </essential:SettingsCard>

            <local:ControlExample.Options>
                <ToggleSwitch x:Name="IsCardEnabled" Header="Is Enabled" />
            </local:ControlExample.Options>

            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">
&lt;essential:SettingsCard
    x:Name=&quot;settingsCard&quot;
    Description=&quot;This is a default card, with the Header, HeaderIcon, Description and Content set.&quot;
    Header=&quot;This is the Header&quot;
    IsEnabled=&quot;{0}&quot;&gt;
    &lt;essential:SettingsCard.HeaderIcon&gt;
        &lt;FontIcon Glyph=&quot;&amp;#xE799;&quot; /&gt;
    &lt;/essential:SettingsCard.HeaderIcon&gt;
    &lt;ComboBox SelectedIndex=&quot;0&quot;&gt;
        &lt;x:String&gt;Option 1&lt;/x:String&gt;
        &lt;x:String&gt;Option 2&lt;/x:String&gt;
        &lt;x:String&gt;Option 3&lt;/x:String&gt;
    &lt;/ComboBox&gt;
&lt;/essential:SettingsCard&gt;
                        </x:String>
                    </local:CodeSource.Code>
                    <local:CodeSource.Substitutions>
                        <local:ControlExampleSubstitution Key="0" Value="{x:Bind local:ControlExample.BooleanToString(IsCardEnabled.IsOn), Mode=OneWay}" />
                    </local:CodeSource.Substitutions>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>


        <local:ControlExample HeaderText="Use a custom header icon">
            <essential:SettingsCard Description="You can use a FontIcon, SymbolIcon or BitmapIcon to set the cards HeaderIcon." Header="Icon options">
                <essential:SettingsCard.HeaderIcon>
                    <BitmapIcon UriSource="ms-appx:///Assets/Square44x44Logo.scale-100.png" />
                </essential:SettingsCard.HeaderIcon>
            </essential:SettingsCard>
            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve"> &lt;essential:SettingsCard Description=&quot;You can use a FontIcon, SymbolIcon or BitmapIcon to set the cards HeaderIcon.&quot; Header=&quot;Icon options&quot;&gt;
    &lt;essential:SettingsCard.HeaderIcon&gt;
        &lt;BitmapIcon UriSource=&quot;ms-appx:///Assets/Square44x44Logo.scale-100.png&quot; /&gt;
    &lt;/essential:SettingsCard.HeaderIcon&gt;
&lt;/essential:SettingsCard&gt;
                        </x:String>
                    </local:CodeSource.Code>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <local:ControlExample HeaderText="Custom description">
            <essential:SettingsCard Header="A card with custom objects as its Description">
                <essential:SettingsCard.Description>
                    <HyperlinkButton Content="Learn more about Phone Link" />
                </essential:SettingsCard.Description>
                <Button Content="Open Phone Link" Style="{StaticResource AccentButtonStyle}" />
            </essential:SettingsCard>
            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">&lt;essential:SettingsCard Header=&quot;A card with custom objects as its Description&quot;&gt;
    &lt;essential:SettingsCard.Description&gt;
        &lt;HyperlinkButton Content=&quot;Learn more about Phone Link&quot; /&gt;
    &lt;/essential:SettingsCard.Description&gt;
    &lt;Button Content=&quot;Open Phone Link&quot; Style=&quot;{StaticResource AccentButtonStyle}&quot; /&gt;
&lt;/essential:SettingsCard&gt;
                        </x:String>
                    </local:CodeSource.Code>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <local:ControlExample HeaderText="Custom resources">
            <essential:SettingsCard Description="When resizing a SettingsCard, the Content will wrap vertically. You can override this breakpoint by setting the SettingsCardWrapThreshold resource. For edge cases, you can also hide the icon by setting SettingsCardWrapNoIconThreshold." Header="Adaptive layouts">
                <essential:SettingsCard.Resources>
                    <x:Double x:Key="SettingsCardWrapThreshold">800</x:Double>
                    <x:Double x:Key="SettingsCardWrapNoIconThreshold">600</x:Double>
                </essential:SettingsCard.Resources>
                <essential:SettingsCard.HeaderIcon>
                    <FontIcon Glyph="&#xE745;" />
                </essential:SettingsCard.HeaderIcon>
                <Button Content="This control will wrap vertically!" Style="{StaticResource AccentButtonStyle}" />
            </essential:SettingsCard>

            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">&lt;essential:SettingsCard Description=&quot;When resizing a SettingsCard, the Content will wrap vertically. You can override this breakpoint by setting the SettingsCardWrapThreshold resource. For edge cases, you can also hide the icon by setting SettingsCardWrapNoIconThreshold.&quot; Header=&quot;Adaptive layouts&quot;&gt;
    &lt;essential:SettingsCard.Resources&gt;
        &lt;x:Double x:Key=&quot;SettingsCardWrapThreshold&quot;&gt;800&lt;/x:Double&gt;
        &lt;x:Double x:Key=&quot;SettingsCardWrapNoIconThreshold&quot;&gt;600&lt;/x:Double&gt;
    &lt;/essential:SettingsCard.Resources&gt;
    &lt;essential:SettingsCard.HeaderIcon&gt;
        &lt;FontIcon Glyph=&quot;&amp;#xE745;&quot; /&gt;
    &lt;/essential:SettingsCard.HeaderIcon&gt;
    &lt;Button Content=&quot;This control will wrap vertically!&quot; Style=&quot;{StaticResource AccentButtonStyle}&quot; /&gt;
&lt;/essential:SettingsCard&gt;                            
                        </x:String>
                    </local:CodeSource.Code>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <local:ControlExample HeaderText="Clickable SettingsCard">
            <essential:SettingsCard
                Description="A SettingsCard can be made clickable and you can leverage the Command property or Click event."
                Header="A clickable SettingsCard"
                IsClickEnabled="True">
                <essential:SettingsCard.HeaderIcon>
                    <FontIcon Glyph="&#xE799;" />
                </essential:SettingsCard.HeaderIcon>
            </essential:SettingsCard>
            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">
                            
                        </x:String>
                    </local:CodeSource.Code>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <local:ControlExample HeaderText="Custom Action">
            <StackPanel>
                <essential:SettingsCard
                    ActionIconToolTip="Open in new window"
                    Description="You can customize the ActionIcon and ActionIconToolTip."
                    Header="Customizing the ActionIcon"
                    IsClickEnabled="True">
                    <essential:SettingsCard.ActionIcon>
                        <FontIcon Glyph="&#xE8A7;" />
                    </essential:SettingsCard.ActionIcon>
                    <essential:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE774;" />
                    </essential:SettingsCard.HeaderIcon>
                </essential:SettingsCard>

                <essential:SettingsCard
                    Header="Hiding the ActionIcon"
                    IsActionIconVisible="False"
                    IsClickEnabled="True">
                    <essential:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE72E;" />
                    </essential:SettingsCard.HeaderIcon>
                </essential:SettingsCard>
            </StackPanel>
        </local:ControlExample>
    </StackPanel>
</Page>
