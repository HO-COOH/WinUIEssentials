<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="WinUI3Example.ExtensionsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:essential="using:WinUI3Package"
    xmlns:local="using:WinUI3Example"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <StackPanel>
        <local:ControlExample HeaderText="ImageExtension (a convenient fallback for loading images)">
            <Image
                x:Name="Image"
                Width="50"
                Height="50"
                essential:ImageExtension.FallbackSource="ms-appx:///Assets/Owl.jpg"
                Source="https://upload.wikimedia.org/wikipedia/commons/5/5f/Windows_logo_-_2012.svg" />
            <local:ControlExample.Options>
                <StackPanel Spacing="5">
                    <Button x:Name="SuccessLoadButton" Click="SuccessLoadButton_Click">Load correct url</Button>
                    <Button x:Name="FailedLoadButton" Click="FailedLoadButton_Click">Load incorrect url</Button>
                </StackPanel>
            </local:ControlExample.Options>

            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">
&lt;Image
    x:Name=&quot;Image&quot;
    Width=&quot;50&quot;
    Height=&quot;50&quot;
    essential:ImageExtension.FallbackSource=&quot;ms-appx:///Assets/Owl.jpg&quot;
    Source=&quot;https://upload.wikimedia.org/wikipedia/commons/5/5f/Windows_logo_-_2012.svg&quot; /&gt;
                    </x:String>
                    </local:CodeSource.Code>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <local:ControlExample HeaderText="UIElementExtension.ClipToBounds">
            <Grid
                Width="148"
                Height="148"
                essential:UIElementExtension.ClipToBounds="{x:Bind ClipSwitch.IsOn, Mode=OneWay}"
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                BorderThickness="1">
                <!--  We translate the inner rectangles outside of the bounds of the container.  -->
                <Rectangle
                    Width="100"
                    Height="100"
                    Fill="{ThemeResource SystemFillColorAttentionBrush}">
                    <Rectangle.RenderTransform>
                        <TranslateTransform X="-50" Y="-50" />
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle
                    Width="100"
                    Height="100"
                    Fill="{ThemeResource SystemFillColorSuccessBrush}">
                    <Rectangle.RenderTransform>
                        <TranslateTransform X="50" Y="50" />
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
            <local:ControlExample.Options>
                <ToggleSwitch x:Name="ClipSwitch" Header="Clip To Bounds" />
            </local:ControlExample.Options>
            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">&lt;Grid
    Width=&quot;148&quot;
    Height=&quot;148&quot;
    essential:UIElementExtension.ClipToBounds=&quot;{0}&quot;
    Background=&quot;{{ThemeResource CardBackgroundFillColorDefaultBrush}}&quot;
    BorderBrush=&quot;{{ThemeResource CardStrokeColorDefaultBrush}}&quot;
    BorderThickness=&quot;1&quot;&gt;
    &lt;!--  We translate the inner rectangles outside of the bounds of the container.  --&gt;
    &lt;Rectangle
        Width=&quot;100&quot;
        Height=&quot;100&quot;
        Fill=&quot;{{ThemeResource SystemFillColorAttentionBrush}}&quot;&gt;
        &lt;Rectangle.RenderTransform&gt;
            &lt;TranslateTransform X=&quot;-50&quot; Y=&quot;-50&quot; /&gt;
        &lt;/Rectangle.RenderTransform&gt;
    &lt;/Rectangle&gt;
    &lt;Rectangle
        Width=&quot;100&quot;
        Height=&quot;100&quot;
        Fill=&quot;{{ThemeResource SystemFillColorSuccessBrush}}&quot;&gt;
        &lt;Rectangle.RenderTransform&gt;
            &lt;TranslateTransform X=&quot;50&quot; Y=&quot;50&quot; /&gt;
        &lt;/Rectangle.RenderTransform&gt;
    &lt;/Rectangle&gt;
&lt;/Grid&gt;</x:String>
                    </local:CodeSource.Code>
                    <local:CodeSource.Substitutions>
                        <local:ControlExampleSubstitution Key="0" Value="{x:Bind local:ControlExample.BooleanToString(ClipSwitch.IsOn), Mode=OneWay}" />
                    </local:CodeSource.Substitutions>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <local:ControlExample HeaderText="FontIconExtension: a convenient way to use FontIcon">
            <StackPanel>
                <AppBarButton Label="Using FontIcon">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE102;" />
                    </AppBarButton.Icon>
                </AppBarButton>

                <AppBarButton Icon="{essential:FontIcon Glyph=&#xE102;}" Label="Using FontIconExtension" />
            </StackPanel>

            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">&lt;StackPanel&gt;
    &lt;AppBarButton Label=&quot;Using FontIcon&quot;&gt;
        &lt;AppBarButton.Icon&gt;
            &lt;FontIcon Glyph=&quot;&amp;#xE102;&quot; /&gt;
        &lt;/AppBarButton.Icon&gt;
    &lt;/AppBarButton&gt;

    &lt;AppBarButton Icon=&quot;{essential:FontIcon Glyph=&amp;#xE102;}&quot; Label=&quot;Using FontIconExtension&quot; /&gt;
&lt;/StackPanel&gt;</x:String>
                    </local:CodeSource.Code>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>
    </StackPanel>

</Page>
