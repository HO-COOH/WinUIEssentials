<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="WinUI3Example.TriggersPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:essential="using:WinUI3Package"
    xmlns:local="using:WinUI3Example"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.Resources>
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20" />
        </Style>
    </Page.Resources>

    <StackPanel>
        <local:ControlExample HeaderText="ControlSizeTrigger">
            <local:ControlExample.Options>
                <Slider
                    x:Name="Slider"
                    Width="400"
                    Maximum="500"
                    Minimum="1" />
            </local:ControlExample.Options>

            <StackPanel MaxWidth="400">
                <Grid
                    x:Name="ParentGrid"
                    Width="{Binding Value, ElementName=Slider, Mode=OneWay}"
                    Height="32"
                    Background="Blue"
                    CornerRadius="4" />
                <TextBlock
                    Margin="0,12,0,0"
                    HorizontalAlignment="Center"
                    Style="{StaticResource CaptionTextBlockStyle}">
                    <Run Text="Control size is" />
                    <Run
                        x:Name="ResizingText"
                        FontWeight="SemiBold"
                        Text="less than 400" />
                </TextBlock>
            </StackPanel>

            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">&lt;Grid
    x:Name=&quot;ParentGrid&quot;
    Width=&quot;{Binding Value, ElementName=Slider, Mode=OneWay}&quot;
    Height=&quot;32&quot;
    Background=&quot;Blue&quot;
    CornerRadius=&quot;4&quot; /&gt;
&lt;TextBlock
    Margin=&quot;0,12,0,0&quot;
    HorizontalAlignment=&quot;Center&quot;
    Style=&quot;{StaticResource CaptionTextBlockStyle}&quot;&gt;
    &lt;Run Text=&quot;Control size is&quot; /&gt;
    &lt;Run
        x:Name=&quot;ResizingText&quot;
        FontWeight=&quot;SemiBold&quot;
        Text=&quot;less than 400&quot; /&gt;
&lt;/TextBlock&gt;       
                            
&lt;VisualStateManager.VisualStateGroups&gt;
    &lt;VisualStateGroup&gt;
        &lt;VisualState&gt;
            &lt;VisualState.StateTriggers&gt;
                &lt;essential:ControlSizeTrigger
                                        MinWidth=&quot;400&quot;
                                        MaxWidth=&quot;501&quot;
                                        TargetElement=&quot;{Binding ElementName=ParentGrid}&quot; /&gt;
            &lt;/VisualState.StateTriggers&gt;
            &lt;VisualState.Setters&gt;
                &lt;Setter Target=&quot;ResizingText.Text&quot; Value=&quot;more than 400&quot; /&gt;
            &lt;/VisualState.Setters&gt;
        &lt;/VisualState&gt;
    &lt;/VisualStateGroup&gt;
&lt;/VisualStateManager.VisualStateGroups&gt;
                        </x:String>
                    </local:CodeSource.Code>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>


        <local:ControlExample HeaderText="IsEqualStateTrigger">
            <StackPanel MaxWidth="400">

                <TextBlock Margin="0,8,0,0" Style="{StaticResource CaptionTextBlockStyle}">
                    <Run Text="Checkbox value is" />
                    <Run
                        x:Name="checkStatus"
                        FontWeight="SemiBold"
                        Text="not indeterminate" />
                </TextBlock>


                <TextBlock Margin="0,8,0,0" Style="{StaticResource CaptionTextBlockStyle}">
                    <Run Text="Slider value is" />
                    <Run
                        x:Name="sliderStatus"
                        FontWeight="SemiBold"
                        Text="more than 0" />
                </TextBlock>
            </StackPanel>
            <local:ControlExample.Options>
                <StackPanel MaxWidth="400">
                    <CheckBox
                        x:Name="checkbox"
                        Content="Check me"
                        IsChecked="True"
                        IsThreeState="True" />

                    <Slider
                        x:Name="slider2"
                        Margin="0,36,0,0"
                        Maximum="5"
                        Minimum="0" />
                </StackPanel>
            </local:ControlExample.Options>

            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">&lt;TextBlock Margin=&quot;0,8,0,0&quot; Style=&quot;{StaticResource CaptionTextBlockStyle}&quot;&gt;
    &lt;Run Text=&quot;Checkbox value is&quot; /&gt;
    &lt;Run
        x:Name=&quot;checkStatus&quot;
        FontWeight=&quot;SemiBold&quot;
        Text=&quot;not indeterminate&quot; /&gt;
&lt;/TextBlock&gt;

&lt;TextBlock Margin=&quot;0,8,0,0&quot; Style=&quot;{StaticResource CaptionTextBlockStyle}&quot;&gt;
    &lt;Run Text=&quot;Slider value is&quot; /&gt;
    &lt;Run
        x:Name=&quot;sliderStatus&quot;
        FontWeight=&quot;SemiBold&quot;
        Text=&quot;more than 0&quot; /&gt;
&lt;/TextBlock&gt; 
                            
&lt;CheckBox
    x:Name=&quot;checkbox&quot;
    Content=&quot;Check me&quot;
    IsChecked=&quot;True&quot;
    IsThreeState=&quot;True&quot; /&gt;

&lt;Slider
    x:Name=&quot;slider2&quot;
    Margin=&quot;0,36,0,0&quot;
    Maximum=&quot;5&quot;
    Minimum=&quot;0&quot; /&gt;
                
&lt;VisualStateManager.VisualStateGroup&gt;
    &lt;VisualStateGroup&gt;
        &lt;VisualState x:Name=&quot;checkstate&quot;&gt;
            &lt;VisualState.StateTriggers&gt;
                &lt;!--  Checkbox is null when indeterminate  --&gt;
                &lt;essential:IsEqualStateTrigger Value=&quot;{Binding IsChecked, ElementName=checkbox, Mode=OneWay}&quot; To=&quot;{x:Null}&quot; /&gt;
            &lt;/VisualState.StateTriggers&gt;
            &lt;VisualState.Setters&gt;
                &lt;Setter Target=&quot;checkStatus.Text&quot; Value=&quot;indeterminate&quot; /&gt;
            &lt;/VisualState.Setters&gt;
        &lt;/VisualState&gt;
    &lt;/VisualStateGroup&gt;
    &lt;VisualStateGroup&gt;
        &lt;VisualState x:Name=&quot;sliderstate&quot;&gt;
            &lt;VisualState.StateTriggers&gt;
                &lt;essential:IsEqualStateTrigger Value=&quot;{Binding Value, ElementName=slider2, Mode=OneWay}&quot; To=&quot;0&quot; /&gt;
            &lt;/VisualState.StateTriggers&gt;
            &lt;VisualState.Setters&gt;
                &lt;Setter Target=&quot;sliderStatus.Text&quot; Value=&quot;0&quot; /&gt;
            &lt;/VisualState.Setters&gt;
        &lt;/VisualState&gt;
    &lt;/VisualStateGroup&gt;
&lt;/VisualStateManager.VisualStateGroup&gt;
                        </x:String>
                    </local:CodeSource.Code>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>


        <local:ControlExample HeaderText="IsNullOrEmptyStateTrigger">
            <StackPanel HorizontalAlignment="Center" Spacing="12">
                <TextBox
                    x:Name="OurTextBox"
                    Header="The TextBox below will warn if it is empty."
                    Text="" />
                <TextBlock
                    x:Name="OurTextBoxError"
                    VerticalAlignment="Center"
                    Text="* required"
                    Visibility="Collapsed" />

                <TextBlock
                    x:Name="ListEmptyMessage"
                    Margin="0,24,0,0"
                    Text="List is empty, add some items"
                    Visibility="Collapsed" />

                <ListView x:Name="OurList" HorizontalAlignment="Left">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="x:String">
                            <Grid>
                                <TextBlock Text="{Binding}" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>

            <local:ControlExample.Options>
                <StackPanel Orientation="Horizontal">
                    <Button
                        x:Name="AddButton"
                        Margin="0,0,4,0"
                        Click="AddButton_Click"
                        Content="Add" />
                    <Button
                        x:Name="RemoveButton"
                        Click="RemoveButton_Click"
                        Content="Remove" />
                </StackPanel>
            </local:ControlExample.Options>

            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">&lt;TextBox
    x:Name=&quot;OurTextBox&quot;
    Header=&quot;The TextBox below will warn if it is empty.&quot;
    Text=&quot;&quot; /&gt;
&lt;TextBlock
    x:Name=&quot;OurTextBoxError&quot;
    VerticalAlignment=&quot;Center&quot;
    Text=&quot;* required&quot;
    Visibility=&quot;Collapsed&quot; /&gt;

&lt;TextBlock
    x:Name=&quot;ListEmptyMessage&quot;
    Margin=&quot;0,24,0,0&quot;
    Text=&quot;List is empty, add some items&quot;
    Visibility=&quot;Collapsed&quot; /&gt;

&lt;ListView x:Name=&quot;OurList&quot; HorizontalAlignment=&quot;Left&quot;&gt;
    &lt;ListView.ItemTemplate&gt;
        &lt;DataTemplate x:DataType=&quot;x:String&quot;&gt;
            &lt;Grid&gt;
                &lt;TextBlock Text=&quot;{Binding}&quot; /&gt;
            &lt;/Grid&gt;
        &lt;/DataTemplate&gt;
    &lt;/ListView.ItemTemplate&gt;
&lt;/ListView&gt;

&lt;Button
        x:Name=&quot;AddButton&quot;
        Margin=&quot;0,0,4,0&quot;
        Click=&quot;AddButton_Click&quot;
        Content=&quot;Add&quot; /&gt;
&lt;Button
        x:Name=&quot;RemoveButton&quot;
        Click=&quot;RemoveButton_Click&quot;
        Content=&quot;Remove&quot; /&gt;

&lt;VisualStateManager.VisualStateGroups&gt;
    &lt;VisualStateGroup x:Name=&quot;TextBoxStates&quot;&gt;
        &lt;VisualState x:Name=&quot;TextBoxNotEmptyState&quot; /&gt;
        &lt;VisualState x:Name=&quot;TextBoxEmptyState&quot;&gt;
            &lt;VisualState.StateTriggers&gt;
                &lt;essential:IsNullOrEmptyStateTrigger Value=&quot;{Binding Text, ElementName=OurTextBox, Mode=OneWay}&quot; /&gt;
            &lt;/VisualState.StateTriggers&gt;
            &lt;VisualState.Setters&gt;
                &lt;Setter Target=&quot;OurTextBox.BorderBrush&quot; Value=&quot;Red&quot; /&gt;
                &lt;Setter Target=&quot;OurTextBoxError.Visibility&quot; Value=&quot;Visible&quot; /&gt;
            &lt;/VisualState.Setters&gt;
        &lt;/VisualState&gt;
    &lt;/VisualStateGroup&gt;
    &lt;VisualStateGroup x:Name=&quot;ListBoxStates&quot;&gt;
        &lt;VisualState x:Name=&quot;ListNotEmptyState&quot; /&gt;
        &lt;VisualState x:Name=&quot;ListEmptyState&quot;&gt;
            &lt;VisualState.StateTriggers&gt;
                &lt;essential:IsNullOrEmptyStateTrigger Value=&quot;{Binding Items, ElementName=OurList, Mode=OneWay}&quot; /&gt;
            &lt;/VisualState.StateTriggers&gt;
            &lt;VisualState.Setters&gt;
                &lt;Setter Target=&quot;RemoveButton.IsEnabled&quot; Value=&quot;False&quot; /&gt;
                &lt;Setter Target=&quot;ListEmptyMessage.Visibility&quot; Value=&quot;Visible&quot; /&gt;
            &lt;/VisualState.Setters&gt;
        &lt;/VisualState&gt;
    &lt;/VisualStateGroup&gt;
&lt;/VisualStateManager.VisualStateGroups&gt;
                        </x:String>
                    </local:CodeSource.Code>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <essential:ControlSizeTrigger
                            MinWidth="400"
                            MaxWidth="501"
                            TargetElement="{Binding ElementName=ParentGrid}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ResizingText.Text" Value="more than 400" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="checkstate">
                    <VisualState.StateTriggers>
                        <!--  Checkbox is null when indeterminate  -->
                        <essential:IsEqualStateTrigger Value="{Binding IsChecked, ElementName=checkbox, Mode=OneWay}" To="{x:Null}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="checkStatus.Text" Value="indeterminate" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="sliderstate">
                    <VisualState.StateTriggers>
                        <essential:IsEqualStateTrigger Value="{Binding Value, ElementName=slider2, Mode=OneWay}" To="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="sliderStatus.Text" Value="0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="TextBoxStates">
                <VisualState x:Name="TextBoxNotEmptyState" />
                <VisualState x:Name="TextBoxEmptyState">
                    <VisualState.StateTriggers>
                        <essential:IsNullOrEmptyStateTrigger Value="{Binding Text, ElementName=OurTextBox, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="OurTextBox.BorderBrush" Value="Red" />
                        <Setter Target="OurTextBoxError.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ListBoxStates">
                <VisualState x:Name="ListNotEmptyState" />
                <VisualState x:Name="ListEmptyState">
                    <VisualState.StateTriggers>
                        <essential:IsNullOrEmptyStateTrigger Value="{Binding Items, ElementName=OurList, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RemoveButton.IsEnabled" Value="False" />
                        <Setter Target="ListEmptyMessage.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </StackPanel>
</Page>
