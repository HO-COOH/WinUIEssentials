<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="WinUI3Example.BadgePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:WinUI3Example"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <StackPanel>
        <local:ControlExample HeaderText="Number Glyph">
            <local:ControlExample.Options>
                <NumberBox
                    x:Name="NumberValue"
                    Width="100"
                    Header="Number badge:"
                    SmallChange="1"
                    SpinButtonPlacementMode="Inline"
                    Value="1" />
            </local:ControlExample.Options>

            <Button Click="Button_Click">Set</Button>

            <local:ControlExample.Cpp>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">winrt::Windows::UI::Notifications::BadgeUpdateManager::CreateBadgeUpdaterForApplication()
    .Update(BadgeGlyphs::MakeBadgeNotification({0});
                        </x:String>
                    </local:CodeSource.Code>
                    <local:CodeSource.Substitutions>
                        <local:ControlExampleSubstitution Value="{x:Bind NumberValue.Text, Mode=OneWay}" />
                    </local:CodeSource.Substitutions>
                </local:CodeSource>
            </local:ControlExample.Cpp>
        </local:ControlExample>

        <local:ControlExample HeaderText="Badge Glyph">
            <ComboBox
                Header="Glyph badge:"
                PlaceholderText="Select badge"
                SelectionChanged="ComboBox_SelectionChanged">
                <x:String>none</x:String>
                <x:String>activity</x:String>
                <x:String>alarm</x:String>
                <x:String>alert</x:String>
                <x:String>attention</x:String>
                <x:String>available</x:String>
                <x:String>away</x:String>
                <x:String>busy</x:String>
                <x:String>error</x:String>
                <x:String>newMessage</x:String>
                <x:String>paused</x:String>
                <x:String>playing</x:String>
                <x:String>unavailable</x:String>
            </ComboBox>

            <local:ControlExample.Xaml>
                <local:CodeSource>
                    <local:CodeSource.Code>
                        <x:String xml:space="preserve">
&lt;StackPanel&gt;
    &lt;TextBlock Text="The following buttons' content may get clipped if we don't pay careful attention to their layout containers." Margin="0,0,0,8" TextWrapping="Wrap"/&gt;
    &lt;TextBlock Text="One option to mitigate clipped content is to place Buttons underneath each other, allowing for more space to grow horizontally:" Margin="0,0,0,8" TextWrapping="Wrap"/&gt;
    &lt;Button HorizontalAlignment="Stretch" Margin="0,0,0,5"&gt;This is some text that is too long and will get cut off&lt;/Button&gt;
    &lt;Button HorizontalAlignment="Stretch"&gt;This is another text that would result in being cut off&lt;/Button&gt;

    &lt;TextBlock Text="Another option is to explicitly wrap the Button's content" Margin="0,8,0,8"/&gt;
    &lt;StackPanel Orientation="Horizontal" HorizontalAlignment="Center"&gt;
        &lt;Button MaxWidth="240" Margin="0,0,8,0"&gt;
            &lt;TextBlock Text="This is some text that is too long and will get cut off" TextWrapping="WrapWholeWords"/&gt;
        &lt;/Button&gt;
        &lt;Button MaxWidth="240"&gt;
            &lt;TextBlock Text="This is another text that would result in being cut off" TextWrapping="WrapWholeWords"/&gt;
        &lt;/Button&gt;
    &lt;/StackPanel&gt;
&lt;/StackPanel&gt;
                </x:String>
                    </local:CodeSource.Code>
                </local:CodeSource>
            </local:ControlExample.Xaml>
        </local:ControlExample>
    </StackPanel>

</Page>
